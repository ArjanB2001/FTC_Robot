//nxt onderdelen
Electric Mindstorms NXT Ultrasonic Sensor
Electric Mindstorms NXT Color Sensor / Color Lamp
Electric Mindstorms NXT Light Sensor

//achtergrond kleur veranderen
relativeLayout.post(new Runnable() {
            public void run() {
                relativeLayout.setBackgroundColor(Color.WHITE);
            }
        });


    public DcMotor frontLeftPower;
    public DcMotor backLeftPower;
    public DcMotor frontRightPower;
    public DcMotor backRightPower;

test line


            //<editor-fold default="folded" desc="Exact-left,right-Control right-stick">

            //right stick op x-as, om precies naar links en rechts te draaien.
            if (gamepad1.right_stick_x>0){
                leftPower  =-gamepad1.right_stick_x ;
                rightPower = gamepad1.right_stick_x ;
            } else if (gamepad1.right_stick_x<0){
                leftPower  =-gamepad1.right_stick_x;
                rightPower = gamepad1.right_stick_x;
            } else {
                telemetry.addData("Motors", "not active");
                telemetry.update();
            }

            //</editor-fold>

            //<editor-fold default="folded" desc="Exact-forward,back-Control left_right_trigger">

            //left- en right trigger om precies vooruit en achteruit te rijden
            // left trigger achteruit; right trigger vooruit
            if (gamepad1.left_trigger>0){
                leftPower = -gamepad1.left_trigger;
                rightPower = -gamepad1.left_trigger;
            } else if(gamepad1.right_trigger>0){
                leftPower = gamepad1.right_trigger;
                rightPower = gamepad1.right_trigger;
            } else {
                telemetry.addData("Motors", "not active");
                telemetry.update();
            }

            //</editor-fold>



            telemetry.addData("Distance (cm)", r.rangeSensor.getUltrasonicLevel());
            //            telemetry.update();
            //
            //            if (r.rangeSensor.getUltrasonicLevel() > 0.0) {
            //
            //                    telemetry.addData("Distance (cm)", r.rangeSensor.getUltrasonicLevel());
            //                    telemetry.update();
            //
            //                    if(r.rangeSensor.getUltrasonicLevel() <= 15){
            //                        break;
            //                    }
            //            }

//<editor-fold default="folded" desc="Forward Backward trigger, Left Right dpad">

            double turn;
            double Turn;

            if(gamepad1.dpad_left==true){
                turn = 0.2;

            } else
                turn = 0.0;

            if(gamepad1.dpad_right==true){
                Turn = -0.2;
            } else
                Turn = 0.0;

            double driveBackward = -this.gamepad1.left_trigger;
            double driveForward  = -this.gamepad1.right_trigger;

            r.LFpower = Range.clip(driveForward - driveBackward - turn - Turn, -0.6, 0.6);
            r.LBpower = Range.clip(driveForward - driveBackward - turn - Turn, -0.6, 0.6);
            r.RFpower = Range.clip(driveForward - driveBackward + turn + Turn, -0.6, 0.6);
            r.RBpower = Range.clip(driveForward - driveBackward + turn + Turn, -0.6, 0.6);

            //</editor-fold>

            //<editor-fold default="folded" desc="Geef motors bepaalde kracht">

            r.LFmotor.setPower(r.LFpower);
            r.LBmotor.setPower(r.LBpower);
            r.RFmotor.setPower(r.RFpower);
            r.RBmotor.setPower(r.RBpower);

            //</editor-fold>
